{"version":3,"file":"static/js/542.bc3aee28.chunk.js","mappings":"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","sources":["components/NestedRoutes/MovieCast.styled.js","components/NestedRoutes/MovieReviews.styled.js","components/NestedRoutes/MovieReviews .jsx","hooks/useHhttp.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n\nexport const Line = styled.div`\n  width: 100%;\n  height: 2px;\n  background-color: #008080cf;\n  margin: 20px 0 30px 0;\n`;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nexport const ReviewText = styled.p`\n  text-align: justify;\n  margin-top: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Line } from './MovieCast.styled';\nimport { ReviewText, ReviewsList } from './MovieReviews.styled';\nimport { useHhttp } from 'hooks/useHhttp';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, , error] = useHhttp(getMovieReviews, movieId);\n\n  if (error) {\n    toast.error(\n      `The request failed! Please reload the page or try again later.`\n    );\n    return <></>;\n  }\n\n  if (!movieReviews) return <Loader />;\n\n  return (\n    <div>\n      <Line />\n      {movieReviews.length ? (\n        <ReviewsList>\n          {movieReviews.map((review, index) => (\n            <li key={index}>\n              <h3>Author: {review.author}</h3>\n              <ReviewText>{review.content}</ReviewText>\n            </li>\n          ))}\n        </ReviewsList>\n      ) : (\n        <h2>We don't have any reviews for this movie.</h2>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n","import { useEffect, useState } from 'react';\n\nexport const useHhttp = (fn, params) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fn(params).then(setData).catch(setError);\n  }, [fn, params]);\n\n  return [data, setData, error];\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'cda8f90653439e85d58cd639fc9f9823',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingsMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`movie/${movie_id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instance.get(`movie/${movie_id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieCastList","styled","_templateObject","_taggedTemplateLiteral","Line","_templateObject2","ReviewsList","ReviewText","movieId","useParams","_useHhttp","useHhttp","getMovieReviews","_useHhttp2","_slicedToArray","movieReviews","toast","_jsx","_Fragment","_jsxs","children","length","map","review","index","author","content","Loader","fn","params","_useState","useState","_useState2","data","setData","_useState3","_useState4","error","setError","useEffect","then","catch","instance","axios","baseURL","api_key","language","getTrendingsMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","_context","prev","next","get","sent","abrupt","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","query","_yield$instance$get2","_context2","concat","_x","getMovieById","_ref3","_callee3","movie_id","_yield$instance$get3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$instance$get4","_context4","cast","_x3","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}