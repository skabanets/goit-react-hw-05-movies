{"version":3,"file":"static/js/544.05f817ce.chunk.js","mappings":"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","sources":["components/MoviesListItem/MoviesListItem.styles.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useHhttp.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledMovie = styled.li`\n  max-width: 224px;\n`;\n\nexport const MoviePoster = styled.img`\n  height: 336px;\n  margin-bottom: 5px;\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const MovieSubtitle = styled.h3`\n  color: #333031;\n  font-size: 18px;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MoviePoster,\n  MovieSubtitle,\n  StyledMovie,\n} from './MoviesListItem.styles';\n\nexport const MoviesItem = ({ movieInfo }) => {\n  const { id, poster_path, name, title } = movieInfo;\n  const location = useLocation();\n\n  const defaultMoviePoster =\n    'https://www.thetechedvocate.org/wp-content/uploads/2023/11/30-5.jpg';\n  const moviePoster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : defaultMoviePoster;\n\n  return (\n    <StyledMovie>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <MoviePoster src={moviePoster} alt={name || title} />\n        <MovieSubtitle>{name || title}</MovieSubtitle>\n      </Link>\n    </StyledMovie>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  width: (100%-60px)/4;\n`;\n","import { MoviesItem } from 'components/MoviesListItem/MoviesListItem';\nimport { StyledMoviesList } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies?.map(movie => (\n        <MoviesItem key={movie.id} movieInfo={movie} />\n      ))}\n    </StyledMoviesList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n  padding: 20px 0;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 28px;\n  line-height: 1.11;\n  text-align: left;\n  letter-spacing: 0.02em;\n  font-weight: 700;\n  color: #333031;\n`;\n","import { Container } from 'components/Container/Container.styled';\nimport { SectionTitle, SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        {title && <SectionTitle>{title}</SectionTitle>}\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useHhttp = (fn, params) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fn(params).then(setData).catch(setError);\n  }, [fn, params]);\n\n  return [data, setData, error];\n};\n","import { Section } from 'components/Section/Section';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useHhttp } from 'hooks/useHhttp';\nimport { getTrendingsMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [movies, , error] = useHhttp(getTrendingsMovies);\n\n  if (error) {\n    toast.error(`The request failed! Reload the page or try again later.`);\n    return <Loader />;\n  }\n\n  if (!movies) return <Loader />;\n\n  return (\n    <Section title={'Trending today'}>\n      <MoviesList movies={movies} />\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'cda8f90653439e85d58cd639fc9f9823',\n    language: 'en-US',\n  },\n});\n\nexport const getTrendingsMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data.results;\n};\n\nexport const getMoviesByName = async query => {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data.results;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const { data } = await instance.get(`movie/${movie_id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instance.get(`movie/${movie_id}/reviews`);\n  return data.results;\n};\n"],"names":["StyledMovie","styled","_templateObject","_taggedTemplateLiteral","MoviePoster","_templateObject2","MovieSubtitle","_templateObject3","MoviesItem","_ref","movieInfo","id","poster_path","name","title","location","useLocation","moviePoster","concat","_jsx","children","_jsxs","Link","state","from","to","src","alt","StyledMoviesList","MoviesList","movies","map","movie","SectionWrapper","SectionTitle","Section","Container","useHhttp","fn","params","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","useEffect","then","catch","_useHhttp","getTrendingsMovies","_useHhttp2","toast","Loader","instance","axios","baseURL","api_key","language","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","_context","prev","next","get","sent","abrupt","results","stop","apply","arguments","getMoviesByName","_ref2","_callee2","query","_yield$instance$get2","_context2","_x","getMovieById","_ref3","_callee3","movie_id","_yield$instance$get3","_context3","_x2","getMovieCast","_ref4","_callee4","_yield$instance$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}